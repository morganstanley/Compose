{"version":3,"file":"component---node-modules-morganstanley-gatsby-theme-ms-gh-pages-src-templates-documentation-js-content-file-path-content-documentation-v-0-1-0-alpha-4-examples-mdx-0a4b6a29cc7906bd9205.js","mappings":"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","sources":["webpack://ms-gh-pages/./content/documentation/v0.1.0-alpha.4/examples.mdx","webpack://ms-gh-pages/./node_modules/@morganstanley/gatsby-theme-ms-gh-pages/src/templates/documentation.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, {\n    id: \"fcd3-app-directory-example\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#fcd3-app-directory-example\",\n    \"aria-label\": \"fcd3 app directory example permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"FCD3 App Directory example\"), \"\\n\", React.createElement(_components.p, null, \"This example contains a JSON file that can be used as the data source for ComposeUI’s FDC3 App Directory implementation. The App Directory contains the \", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/ComposeUI/tree/main/examples/js-chart\"\n  }, \"js-chart\"), \" and \", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/ComposeUI/tree/main/examples/js-datagrid\"\n  }, \"js-grid\"), \" examples.\"), \"\\n\", React.createElement(_components.p, null, \"To run the example:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Run the \", React.createElement(_components.a, {\n    href: \"https://github.com/morganstanley/ComposeUI/blob/main/examples/serve-chart-and-grid.ps1\"\n  }, \"serve-chart-and-grid.ps1\"), \" script to run the local server for the included web apps.\"), \"\\n\", React.createElement(_components.li, null, \"Launch the Shell project using the configuration named \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Chart and grid</code>\"\n    }\n  }), \", or use these command line arguments:\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token operator\\\">--</span>url http:<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span>localhost:4200 <span class=\\\"token operator\\\">--</span>FDC3:AppDirectory:Source $<span class=\\\"token punctuation\\\">(</span>ComposeUIRepositoryRoot<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span>examples/fdc3-appdirectory/apps<span class=\\\"token punctuation\\\">.</span>json</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(you’ll have to manually substitute \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">$(ComposeUIRepositoryRoot)</code>\"\n    }\n  }), \" with the actual root path of the repo).\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ComposeUI/ComposeUI/site/content/documentation/v0.1.0-alpha.4/examples.mdx\";\nimport React, {useCallback, useMemo, useState} from 'react';\nimport {Link, navigate, graphql} from 'gatsby';\nimport {Box} from '@mui/material';\nimport Layout from '../components/layout';\nimport PageHead from '../components/page-head';\nimport VersionSelect from '../components/version-select';\nimport {tocFragment, allDirectoryNodes} from '../fragments/documentation';\nimport {siteFragment} from '../fragments/site';\nimport {getCurrentVersion, getDocsVersion} from '../utils/version-docs';\nconst DocumentationTemplate = ({children, data, pageContext, location}) => {\n  const allDocs = data.allMdx.nodes;\n  const toc = data.mdx.tableOfContents.items;\n  const pageTitle = pageContext.frontmatter.title;\n  const slug = data.mdx.fields.slug;\n  const siteTitle = data.site?.siteMetadata?.title;\n  const versions = useMemo(() => data.allDirectory.nodes.reverse().map(node => node.base), [data.allDirectory.nodes]);\n  const [selectedVersion, setSelectedVersion] = useState(getCurrentVersion(slug, versions));\n  const docs = getDocsVersion(allDocs, getCurrentVersion(slug, versions));\n  const handleVersionChange = useCallback(event => {\n    const newPath = slug.replace(selectedVersion, event.target.value);\n    setSelectedVersion(event.target.value);\n    navigate(newPath);\n  }, [selectedVersion, slug]);\n  return React.createElement(Layout, {\n    data: data,\n    location: location\n  }, React.createElement(\"article\", {\n    className: \"page-main content\"\n  }, React.createElement(\"h3\", null, siteTitle)), React.createElement(\"article\", {\n    className: \"page-main content documentation-main\"\n  }, React.createElement(\"nav\", {\n    className: \"nav documentation-nav\"\n  }, React.createElement(\"h4\", null, \"Documentation\"), React.createElement(Box, {\n    sx: {\n      mt: 3\n    }\n  }, React.createElement(VersionSelect, {\n    versions: versions,\n    selectedVersion: selectedVersion,\n    onChange: handleVersionChange\n  })), React.createElement(\"ul\", null, docs.map((node, i) => {\n    const current = location.pathname.includes(node.fields.slug);\n    const title = node.frontmatter.title;\n    return React.createElement(\"li\", {\n      key: i,\n      className: current ? 'current' : ''\n    }, React.createElement(Link, {\n      to: node.fields.slug\n    }, title), current && React.createElement(\"nav\", {\n      className: \"nav documentation-content-nav\"\n    }, React.createElement(\"ul\", null, toc && toc.map((item, j) => React.createElement(\"li\", {\n      key: `link-${j}`\n    }, React.createElement(Link, {\n      to: item.url\n    }, item.title))))));\n  }))), React.createElement(\"div\", {\n    className: \"documentation-content\"\n  }, React.createElement(\"header\", null, React.createElement(\"h2\", null, pageTitle)), children)));\n};\nDocumentationTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocumentationTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data, pageContext}) => {\n  const title = `${pageContext.frontmatter.title} | ${data.site.siteMetadata.title}`;\n  return React.createElement(PageHead, {\n    title: title\n  }, React.createElement(\"meta\", {\n    name: \"description\",\n    content: pageContext.description\n  }));\n};\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    site {\n      ...SiteMetadata\n    }\n    allDirectory(filter: { relativeDirectory: { eq: \"documentation\" } }) {\n      ...AllDocDirectories\n    }\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n      tableOfContents\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/documentation//\" } } }\n      sort: [{ frontmatter: { order: ASC } }]\n    ) {\n      ...MdxTableOfContents\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","span","p","ul","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","DocumentationTemplate","_ref","_data$site","_data$site$siteMetada","children","data","pageContext","location","allDocs","allMdx","nodes","toc","mdx","tableOfContents","items","pageTitle","frontmatter","title","slug","fields","siteTitle","site","siteMetadata","versions","useMemo","allDirectory","reverse","map","node","base","selectedVersion","setSelectedVersion","useState","getCurrentVersion","docs","getDocsVersion","handleVersionChange","useCallback","event","newPath","replace","target","value","navigate","Layout","Box","sx","mt","VersionSelect","onChange","i","current","pathname","includes","key","Link","to","item","j","url","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","PageHead","name","content","description"],"sourceRoot":""}