on:
  release:
    types: [ published ]
    branches: [ main ]

  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  actions: read

name: Release

jobs:
  build:
    uses: ./.github/workflows/continuous-integration.yml
  upload:
    name: Upload Release Asset
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      # Using shared artifact from build workflow
      - name: Download Artifact
        uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d # v4.1.5
        with:
          name: shell-binaries
          path: ${{ github.workspace }}/shell-binaries
    
      - name: Display structure of downloaded files
        run: Get-ChildItem -Recurse
        working-directory: ${{ github.workspace }}/shell-binaries
        
      - name: Compress
        run: Compress-Archive -Path  ${{ github.workspace }}/shell-binaries/* composeui-${{ github.ref_name }}-win32.zip
        
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./composeui-${{ github.ref_name }}-win32.zip
          asset_name: composeui-${{ github.ref_name }}-win32.zip
          asset_content_type: application/zip
          
  deploy-npm:
    name: Publish Package to npmjs
    runs-on: windows-latest
    needs: upload
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
      - run: |
             lerna publish from-package --no-private --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

  deploy-nuget:
    name: Publish messaging packages to nuget.org
    runs-on: windows-latest
    needs: build
    env:
      nuget_source: https://api.nuget.org/v3/index.json
    steps:
      - uses: actions/download-artifact@8caf195ad4b1dee92908e23f56eeb0696f1dd42d # v4.1.5
        with:
          name: packages
          path: ./packages
      - uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
        with:
          dotnet-version: 6.0.x
      - name: Publish Messaging packages
        working-directory: ./packages
        run: |
             dotnet nuget push MorganStanley.ComposeUI.Messaging.Core.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.nuget_source }} --skip-duplicate
             dotnet nuget push MorganStanley.ComposeUI.Messaging.Server.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.nuget_source }} --skip-duplicate
             dotnet nuget push MorganStanley.ComposeUI.Messaging.Client.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.nuget_source }} --skip-duplicate
             dotnet nuget push MorganStanley.ComposeUI.Messaging.Host.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source ${{ env.nuget_source }} --skip-duplicate

